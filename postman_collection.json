{
	"info": {
		"_postman_id": "b51124aa-a9c0-4e26-923b-14977d5cb547",
		"name": "Auth API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23397059"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sets user vars if res status is 201\", function () {",
									"    if (pm.response.code === 201) {",
									"        const res = pm.response.json();",
									"        const userId = res.id;",
									"        const verificationCode = res.verificationCode;",
									"        const email = res.email;",
									"        pm.collectionVariables.set(\"userId\", userId);",
									"        pm.collectionVariables.set(\"verificationCode\", verificationCode);",
									"        pm.collectionVariables.set(\"userEmail\", email);",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\",\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/users/verify/{{userId}}&{{verificationCode}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users",
								"verify",
								"{{userId}}&{{verificationCode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send reset password code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sets password reset code if res status is 200\", function () {",
									"    if (pm.response.code === 200) {",
									"        const res = pm.response.json();",
									"        const passwordResetCode = res.resetCode;",
									"        pm.collectionVariables.set(\"passwordResetCode\", passwordResetCode);",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{userEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/users/password/reset",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users",
								"password",
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{newPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/users/password/reset/{{userId}}&{{passwordResetCode}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users",
								"password",
								"reset",
								"{{userId}}&{{passwordResetCode}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sets user passwordResetCode if res status is 200\", function () {",
									"    if (pm.response.code === 200) {",
									"        const res = pm.response.json();",
									"        const passwordResetCode = res.passwordResetCode;",
									"        pm.collectionVariables.set(\"passwordResetCode\", passwordResetCode);",
									"",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Create session (sign in)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sets access & refresh token if res status is 200\", function () {",
									"    if (pm.response.code === 200) {",
									"        const res = pm.response.json();",
									"        const accessToken = res.accessToken;",
									"        const refreshToken = res.refreshToken;",
									"        pm.collectionVariables.set(\"accessToken\", accessToken);",
									"        pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dasdasasdasdasdasddasdasdas",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalidate session (logout)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes (any protected resource)",
			"item": [
				{
					"name": "Get all notes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/notes",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Sets note id if res status is 201\", function () {",
									"    if (pm.response.code === 201) {",
									"        const res = pm.response.json();",
									"        const noteId = res._id;",
									"        pm.collectionVariables.set(\"noteId\", noteId);",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{newNoteTitle}}\",\n    \"content\": \"{{newNoteContent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/notes",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"notes"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "localhost:3001",
			"type": "string"
		},
		{
			"key": "username",
			"value": "ladydi",
			"type": "string"
		},
		{
			"key": "password",
			"value": "hj123gr4uy1vfeq",
			"type": "string"
		},
		{
			"key": "email",
			"value": "ouqtunrrdxypinxtpx@tmmbt.net",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "<sets after sign in>",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "<sets after sign in>",
			"type": "string"
		},
		{
			"key": "noteId",
			"value": "<sets after creating note>",
			"type": "string"
		},
		{
			"key": "newNoteTitle",
			"value": "Note no 1 about cats",
			"type": "string"
		},
		{
			"key": "newNoteContent",
			"value": "Cats are quick and agile",
			"type": "string"
		},
		{
			"key": "verificationCode",
			"value": "<sets after creating user>",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "<sets after creating user>",
			"type": "string"
		},
		{
			"key": "userEmail",
			"value": "<sets after creating user>",
			"type": "string"
		},
		{
			"key": "passwordResetCode",
			"value": "<sets after fetching user data>",
			"type": "string"
		},
		{
			"key": "newPassword",
			"value": "231r3fewfascac",
			"type": "string"
		}
	]
}